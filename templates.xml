<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java-members" deleted="false" description="Android Parcelable" enabled="true" name="at_creator">${:import	(android.os.Parcel, android.os.Parcelable)}&#13;
&#13;
public int describeContents() {&#13;
         return 0;&#13;
     }&#13;
&#13;
     public void writeToParcel(Parcel out, int flags) {&#13;
		// TODO: serialize your properties here&#13;
     }&#13;
&#13;
     public static final Parcelable.Creator&lt;${enclosing_type}&gt; CREATOR&#13;
             = new Parcelable.Creator&lt;${enclosing_type}&gt;() {&#13;
         public ${enclosing_type} createFromParcel(Parcel in) {&#13;
             return new ${enclosing_type}(in);&#13;
         }&#13;
&#13;
         public ${enclosing_type}[] newArray(int size) {&#13;
             return new ${enclosing_type}[size];&#13;
         }&#13;
     };&#13;
     &#13;
     private ${enclosing_type}(Parcel in) {&#13;
         // TODO: deserialize your properties here&#13;
     }&#13;
</template><template autoinsert="true" context="java" deleted="false" description="Android Handler with weak reference to enclosing type" enabled="true" name="at_handler">${:import (android.os.Handler, android.os.Message, java.lang.ref.WeakReference)}&#13;
&#13;
private static final class ${handler_name} extends Handler {&#13;
	&#13;
	private WeakReference&lt;${enclosing_type}&gt; ${outer}Ref;&#13;
&#13;
	public ${handler_name}(${enclosing_type} ${outer}) {&#13;
		${outer}Ref = new WeakReference&lt;${enclosing_type}&gt;(${outer});&#13;
	}&#13;
&#13;
	public void handleMessage(Message msg) {&#13;
	}&#13;
&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="Check if string is empty" enabled="true" name="at_isempty">${:import (android.text.TextUtils)}TextUtils.isEmpty(${cursor})</template><template autoinsert="true" context="java" deleted="false" description="Check if string is not empty" enabled="true" name="at_nisempty">${:import (android.text.TextUtils)}!TextUtils.isEmpty(${cursor})</template><template autoinsert="true" context="java" deleted="false" description="Android Parcelable class" enabled="true" name="at_parcelable">${:import	(android.os.Parcel, android.os.Parcelable)}&#13;
&#13;
public static class ${parcelable_class} implements Parcelable {&#13;
&#13;
public int describeContents() {&#13;
         return 0;&#13;
     }&#13;
&#13;
     public void writeToParcel(Parcel out, int flags) {&#13;
		// TODO: serialize your properties here&#13;
     }&#13;
&#13;
     public static final Parcelable.Creator&lt;${parcelable_class}&gt; CREATOR&#13;
             = new Parcelable.Creator&lt;${parcelable_class}&gt;() {&#13;
         public ${parcelable_class} createFromParcel(Parcel in) {&#13;
             return new ${parcelable_class}(in);&#13;
         }&#13;
&#13;
         public ${parcelable_class}[] newArray(int size) {&#13;
             return new ${parcelable_class}[size];&#13;
         }&#13;
     };&#13;
     &#13;
     private ${parcelable_class}(Parcel in) {&#13;
         // TODO: deserialize your properties here&#13;
     }&#13;
&#13;
}&#13;
</template><template autoinsert="true" context="java" deleted="false" description="Android AsyncQueryHandler" enabled="true" name="at_queryhandler">${:import (android.os.AsyncQueryHandler, android.content.ContentResolver, java.lang.ref.WeakReference)}&#13;
&#13;
private static final class ${handler_name} extends AsyncQueryHandler {&#13;
	&#13;
	private WeakReference&lt;${enclosing_type}&gt; ${outer}Ref;&#13;
&#13;
	public ${handler_name}(ContentResolver cr, ${enclosing_type} ${outer}) {&#13;
		super(cr);&#13;
		${outer}Ref = new WeakReference&lt;${enclosing_type}&gt;(${outer});&#13;
	}&#13;
&#13;
}</template></templates>